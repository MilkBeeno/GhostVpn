plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    // id 'com.google.gms.google-services'
}

android {
    namespace 'com.simple.ghostvpn'
    compileSdk 33

    defaultConfig {
        // 测试服包：com.milk.GhostProxyvpn 正式服包：com.simple.GhostProxyvpn
        applicationId "com.simple.GhostProxyvpn"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    // 加载打包时的 JKS 认证
    signingConfigs {
        myJsk {
            storeFile file("../app/jks/ghost.jks")
            storePassword 'ghost123456'
            keyAlias 'ghost'
            keyPassword 'ghost123456'
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            signingConfig signingConfigs.myJsk
            buildConfigField 'String', 'APP_ID', "${APP_ID_DEBUG}"
            buildConfigField 'String', 'APP_CHANNEL', "${APP_CHANNEL}"
            buildConfigField 'String', 'APP_VERSION', "${APP_VERSION_DEBUG}"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            zipAlignEnabled true
            signingConfig signingConfigs.myJsk
            buildConfigField 'String', 'APP_ID', "${APP_ID_RELEASE}"
            buildConfigField 'String', 'APP_CHANNEL', "${APP_CHANNEL}"
            buildConfigField 'String', 'APP_VERSION', "${APP_VERSION_RELEASE}"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation project(path: ':vpn')
    // 默认依赖设置
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    // lottie 动画依赖库
    implementation "com.airbnb.android:lottie:5.2.0"
    // retrofit 网络请求
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.google.code.gson:gson:2.9.0"
    // vpn 列表显示库
    implementation 'com.github.liangjingkanji:BRV:1.3.79'
    // glide 图片加载
    implementation 'com.github.bumptech.glide:glide:4.15.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.15.0'
    // firebase 统计功能
    // implementation platform('com.google.firebase:firebase-bom:31.2.0')
    // implementation 'com.google.firebase:firebase-analytics:21.1.0'
    // admob 广告
    implementation 'com.google.android.gms:play-services-ads:21.5.0'
    // Timber 日志打印库封装
    implementation("com.jakewharton.timber:timber:5.0.1")
    // MMKV 库封装
    implementation("com.tencent:mmkv:1.2.13")
    // activity fragment ktx
    implementation "androidx.activity:activity-ktx:1.6.1"
    // Kotlin coroutines 依赖库
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"
    // liveEventBus 事件通知
    implementation 'io.github.jeremyliao:live-event-bus-x:1.8.0'
    // facebook 推广
    implementation "com.facebook.android:facebook-android-sdk:14.0.0"
    implementation "com.facebook.android:audience-network-sdk:6.11.0"
}